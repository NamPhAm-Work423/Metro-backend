# nginx/nginx.local.conf - Local Development Config (HTTP only)
worker_processes auto;

events {
    worker_connections 1024;
}

http {
    include /etc/nginx/mime.types;
    default_type application/octet-stream;

    ########################################################################
    # Global hardening & performance
    ########################################################################
    server_tokens off;

    log_format json escape=json '{"time":"$time_iso8601","remote_addr":"$remote_addr","request":"$request","status":$status,"body_bytes_sent":$body_bytes_sent,"request_time":$request_time,"upstream_response_time":"$upstream_response_time","method":"$request_method","uri":"$request_uri","host":"$host","user_agent":"$http_user_agent","x_forwarded_for":"$http_x_forwarded_for"}';
    access_log /var/log/nginx/access.log json;
    error_log  /var/log/nginx/error.log warn;

    sendfile on;
    tcp_nopush on;
    tcp_nodelay on;
    keepalive_timeout 65;
    types_hash_max_size 2048;

    client_max_body_size 10m;

    gzip on;
    gzip_comp_level 6;
    gzip_min_length 1024;
    gzip_vary on;
    gzip_proxied any;
    gzip_types 
        application/json 
        application/javascript 
        text/css 
        text/plain 
        application/xml;

    upstream api_gateway {
        server api-gateway:8000;
        keepalive 32;
        keepalive_requests 50;
        keepalive_timeout 30s;
    }

    upstream webhook_service {
        server webhook:3003;
        keepalive 16;
        keepalive_requests 25;
        keepalive_timeout 15s;
    }

    map $http_origin $cors_origin {
        default "";
        "http://localhost:3000" "http://localhost:3000";
        "http://localhost:3001" "http://localhost:3001";
        "http://localhost:8080" "http://localhost:8080";
        "http://127.0.0.1:3000" "http://127.0.0.1:3000";
    }

    ########################################################################
    # HTTP Server (Local Development)
    ########################################################################
    server {
        listen 80;
        listen [::]:80;
        server_name localhost 127.0.0.1;

        add_header X-Frame-Options DENY always;
        add_header X-Content-Type-Options nosniff always;

        ####################################################################
        # Health check route
        ####################################################################
        location /health {
            proxy_pass http://api_gateway/health;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            
            proxy_connect_timeout 5s;
            proxy_send_timeout 5s;
            proxy_read_timeout 5s;
        }

        ####################################################################
        # Favicon handling
        ####################################################################
        location /favicon.ico {
            access_log off;
            log_not_found off;
            return 204;
        }

        ####################################################################
        # Swagger UI Documentation
        ####################################################################
        location /api-docs/ {
            proxy_hide_header Access-Control-Allow-Origin;
            proxy_hide_header Access-Control-Allow-Credentials;
            proxy_hide_header Access-Control-Allow-Methods;
            proxy_hide_header Access-Control-Allow-Headers;
            proxy_hide_header Access-Control-Expose-Headers;
            proxy_hide_header Access-Control-Max-Age;
            
            add_header Access-Control-Allow-Origin $cors_origin always;
            add_header Access-Control-Allow-Methods "GET, POST, PUT, DELETE, PATCH, OPTIONS" always;
            add_header Access-Control-Allow-Headers "Authorization, Content-Type, X-Requested-With, x-api-key, X-Service-Auth" always;
            add_header Access-Control-Allow-Credentials true always;
            add_header Access-Control-Expose-Headers "Content-Length, Content-Range, Authorization" always;
            add_header Access-Control-Max-Age 86400 always;

            if ($request_method = 'OPTIONS') {
                return 204;
            }

            proxy_pass http://api_gateway/api-docs/;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
        }

        ####################################################################
        # Webhook routes
        ####################################################################
        location /webhook/ {
            proxy_hide_header Access-Control-Allow-Origin;
            proxy_hide_header Access-Control-Allow-Credentials;
            proxy_hide_header Access-Control-Allow-Methods;
            proxy_hide_header Access-Control-Allow-Headers;
            proxy_hide_header Access-Control-Expose-Headers;
            proxy_hide_header Access-Control-Max-Age;
            
            add_header Access-Control-Allow-Origin "*" always;
            add_header Access-Control-Allow-Methods "GET, POST, PUT, DELETE, PATCH, OPTIONS" always;
            add_header Access-Control-Allow-Headers "Authorization, Content-Type, X-Requested-With, x-api-key, X-Service-Auth" always;
            add_header Access-Control-Allow-Credentials false always;

            if ($request_method = 'OPTIONS') {
                return 204;
            }

            proxy_pass http://webhook_service;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;

            proxy_connect_timeout 30s;
            proxy_send_timeout 30s;
            proxy_read_timeout 30s;
            client_max_body_size 10m;
        }

        ####################################################################
        # API routes - handle preflight at Nginx
        ####################################################################
        location /v1/ {
            # Handle connection errors with custom page, pass through application errors
            error_page 502 503 504 = @api_gateway_unavailable;

            # Smart error handling: intercept connection errors but pass through application errors
            proxy_intercept_errors on;
            
            proxy_hide_header Access-Control-Allow-Origin;
            proxy_hide_header Access-Control-Allow-Credentials;
            proxy_hide_header Access-Control-Allow-Methods;
            proxy_hide_header Access-Control-Allow-Headers;
            proxy_hide_header Access-Control-Expose-Headers;
            proxy_hide_header Access-Control-Max-Age;
            
            add_header Access-Control-Allow-Origin $cors_origin always;
            add_header Access-Control-Allow-Methods "GET, POST, PUT, DELETE, PATCH, OPTIONS" always;
            add_header Access-Control-Allow-Headers "Authorization, Content-Type, X-Requested-With, x-api-key, X-Service-Auth" always;
            add_header Access-Control-Allow-Credentials true always;
            add_header Access-Control-Expose-Headers "Content-Length, Content-Range, Authorization" always;
            add_header Access-Control-Max-Age 86400 always;

            if ($request_method = 'OPTIONS') {
                return 204;
            }

            proxy_pass http://api_gateway;
            proxy_http_version 1.1;
            proxy_set_header Upgrade $http_upgrade;
            proxy_set_header Connection "upgrade";
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;

            # Optimized buffering for local development
            proxy_buffering on;
            proxy_buffers 8 8k;
            proxy_buffer_size 8k;
            proxy_busy_buffers_size 16k;
            proxy_max_temp_file_size 0;

            proxy_connect_timeout 30s;
            proxy_send_timeout 30s;
            proxy_read_timeout 30s;
        }

        ####################################################################
        # Monitoring routes (optional for local dev)
        ####################################################################
        location /grafana/ {
            proxy_pass http://grafana:3000/;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
        }

        location /prometheus/ {
            proxy_pass http://prometheus:9090/;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
        }

        # Error page for API Gateway unavailability
        location @api_gateway_unavailable {
            return 503 '<!DOCTYPE html>
<html>
<head><title>Service Temporarily Unavailable</title></head>
<body style="font-family: Arial, sans-serif; text-align: center; margin-top: 100px;">
    <h1>üöß API Gateway Unavailable (Local Dev)</h1>
    <p>The Metro API Gateway is not running or starting up.</p>
    <p>Please ensure all services are started with: <code>docker-compose up -d</code></p>
    <p><a href="/health">‚Üê Check System Health</a></p>
</body>
</html>';
            add_header Content-Type text/html;
        }
    }
}
