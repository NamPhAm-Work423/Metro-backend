# nginx/nginx.conf - Production VPS Config
worker_processes auto;

events {
    worker_connections 4096;
}

http {
    include /etc/nginx/mime.types;
    default_type application/octet-stream;

    ########################################################################
    # Global hardening & performance
    ########################################################################
    server_tokens off;

    log_format json escape=json '{"time":"$time_iso8601","remote_addr":"$remote_addr","request":"$request","status":$status,"body_bytes_sent":$body_bytes_sent,"request_time":$request_time,"upstream_response_time":"$upstream_response_time","method":"$request_method","uri":"$request_uri","host":"$host","user_agent":"$http_user_agent","x_forwarded_for":"$http_x_forwarded_for"}';
    access_log /var/log/nginx/access.log json;
    error_log  /var/log/nginx/error.log warn;

    sendfile on;
    tcp_nopush on;
    tcp_nodelay on;
    keepalive_timeout 65;
    keepalive_requests 1000;
    types_hash_max_size 2048;

    client_max_body_size 10m;
    client_body_timeout 60s;
    client_header_timeout 60s;

    gzip on;
    gzip_comp_level 6;
    gzip_min_length 1024;
    gzip_vary on;
    gzip_proxied any;
    gzip_types 
        application/json 
        application/javascript 
        text/css 
        text/plain 
        application/xml 
        application/x-javascript
        text/javascript
        text/xml;

    limit_conn_zone $binary_remote_addr zone=addr_limit:10m;
    limit_req_zone $binary_remote_addr zone=api_limit:10m rate=10r/s;
    limit_req_zone $binary_remote_addr zone=general_limit:10m rate=20r/s;

    map $http_upgrade $connection_upgrade {
        default upgrade;
        ''      close;
    }

    set_real_ip_from 10.0.0.0/8;
    set_real_ip_from 172.16.0.0/12;
    set_real_ip_from 192.168.0.0/16;
    set_real_ip_from 127.0.0.1;
    real_ip_header X-Forwarded-For;
    real_ip_recursive on;

    upstream api_gateway {
        server api-gateway:8000;
        keepalive 64;
        keepalive_requests 100;
        keepalive_timeout 60s;
    }

    map $http_origin $cors_origin {
        default "";
        "https://metro-system.vercel.app" "https://metro-system.vercel.app";
        "https://metrohcm.io.vn" "https://metrohcm.io.vn";
        "https://api.metrohcm.io.vn" "https://api.metrohcm.io.vn";
        "http://localhost:3000" "http://localhost:3000";
        "http://localhost:3001" "http://localhost:3001";
    }

    ########################################################################
    # HTTP -> HTTPS redirect
    ########################################################################
    server {
        listen 80;
        listen [::]:80;
        server_name localhost metrohcm.io.vn *.metrohcm.io.vn;

        add_header X-Frame-Options DENY always;
        add_header X-Content-Type-Options nosniff always;

        location /health {
            proxy_pass http://api_gateway/health;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
        }

        location /api-docs {
            proxy_pass http://api_gateway/api-docs;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
        }

        location / {
            return 301 https://$host$request_uri;
        }
    }

    ########################################################################
    # HTTPS Server
    ########################################################################
    server {
        listen 443 ssl;
        listen [::]:443 ssl;
        http2 on;
        server_name localhost metrohcm.io.vn *.metrohcm.io.vn;

        ssl_certificate     /etc/letsencrypt/live/metrohcm.io.vn/fullchain.pem;
        ssl_certificate_key /etc/letsencrypt/live/metrohcm.io.vn/privkey.pem;
        ssl_protocols TLSv1.2 TLSv1.3;
        ssl_ciphers ECDHE-ECDSA-AES256-GCM-SHA384:ECDHE-RSA-AES256-GCM-SHA384:ECDHE-ECDSA-CHACHA20-POLY1305:ECDHE-RSA-CHACHA20-POLY1305:ECDHE-ECDSA-AES128-GCM-SHA256:ECDHE-RSA-AES128-GCM-SHA256;
        ssl_prefer_server_ciphers off;

        ssl_session_cache shared:SSL:50m;
        ssl_session_timeout 1d;
        ssl_session_tickets off;

        add_header X-Frame-Options DENY always;
        add_header X-Content-Type-Options nosniff always;
        add_header X-XSS-Protection "1; mode=block" always;
        add_header Referrer-Policy strict-origin-when-cross-origin always;
        add_header Permissions-Policy "geolocation=(), microphone=(), camera=()" always;
        add_header Strict-Transport-Security "max-age=31536000; includeSubDomains" always;

        ####################################################################
        # Health check route
        ####################################################################
        location /health {
            proxy_intercept_errors off;
            proxy_pass http://api_gateway/health;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
        }

        ####################################################################
        # Swagger UI Documentation
        ####################################################################
        location /api-docs {
            proxy_hide_header Access-Control-Allow-Origin;
            proxy_hide_header Access-Control-Allow-Credentials;
            proxy_hide_header Access-Control-Allow-Methods;
            proxy_hide_header Access-Control-Allow-Headers;
            proxy_hide_header Access-Control-Expose-Headers;
            proxy_hide_header Access-Control-Max-Age;
            
            add_header Access-Control-Allow-Origin $cors_origin always;
            add_header Access-Control-Allow-Methods "GET, POST, PUT, DELETE, PATCH, OPTIONS" always;
            add_header Access-Control-Allow-Headers "Authorization, Content-Type, X-Requested-With, x-api-key, X-Service-Auth" always;
            add_header Access-Control-Allow-Credentials true always;
            add_header Access-Control-Expose-Headers "Content-Length, Content-Range, Authorization" always;
            add_header Access-Control-Max-Age 86400 always;
            add_header Vary "Origin" always;

            if ($request_method = 'OPTIONS') {
                return 204;
            }

            proxy_intercept_errors off;
            proxy_pass http://api_gateway/api-docs/;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
        }

        ####################################################################
        # API routes - handle preflight at Nginx
        ####################################################################
        location /v1/ {
            # Ensure upstream errors pass through unchanged
            proxy_intercept_errors off;
            
            # Hide any CORS headers from upstream to prevent duplicates
            proxy_hide_header Access-Control-Allow-Origin;
            proxy_hide_header Access-Control-Allow-Credentials;
            proxy_hide_header Access-Control-Allow-Methods;
            proxy_hide_header Access-Control-Allow-Headers;
            proxy_hide_header Access-Control-Expose-Headers;
            proxy_hide_header Access-Control-Max-Age;
            
            add_header Access-Control-Allow-Origin $cors_origin always;
            add_header Access-Control-Allow-Methods "GET, POST, PUT, DELETE, PATCH, OPTIONS" always;
            add_header Access-Control-Allow-Headers "Authorization, Content-Type, X-Requested-With, x-api-key, X-Service-Auth" always;
            add_header Access-Control-Allow-Credentials true always;
            add_header Access-Control-Expose-Headers "Content-Length, Content-Range, Authorization" always;
            add_header Access-Control-Max-Age 86400 always;
            add_header Vary "Origin" always;

            if ($request_method = 'OPTIONS') {
                return 204;
            }

            limit_req zone=api_limit burst=20 nodelay;
            limit_conn addr_limit 20;

            proxy_pass http://api_gateway;
            proxy_http_version 1.1;
            proxy_set_header Upgrade $http_upgrade;
            proxy_set_header Connection $connection_upgrade;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            proxy_set_header X-Forwarded-Host $host;
            proxy_set_header X-Forwarded-Port $server_port;
            # proxy_set_header Cookie $http_cookie;
            proxy_cache_bypass $http_upgrade;

            # Minimal buffering to preserve error responses
            proxy_buffering on;
            proxy_buffers 16 16k;
            proxy_buffer_size 16k;
            proxy_busy_buffers_size 24k;
            proxy_max_temp_file_size 0;
            
            # Pass through upstream status and headers for errors
            proxy_pass_header Server;
            proxy_pass_header Date;

            proxy_connect_timeout 60s;
            proxy_send_timeout 60s;
            proxy_read_timeout 60s;
        }
    }
}
