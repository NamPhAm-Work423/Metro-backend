worker_processes auto;
gzip on;
gzip_types text/plain text/css application/javascript application/json image/svg+xml;
gzip_min_length 1024;

events {
    worker_connections 4096;
}

http {
    include /etc/nginx/mime.types;
    default_type application/octet-stream;

    ########################################################################
    # Global hardening & performance
    ########################################################################
    server_tokens off;

    # >>> UPDATED LOG FORMAT: add upstream_addr & upstream_status for debugging <<<
    log_format json escape=json
      '{"time":"$time_iso8601","remote_addr":"$remote_addr","request":"$request","status":$status,"body_bytes_sent":$body_bytes_sent,"request_time":$request_time,"upstream_response_time":"$upstream_response_time","upstream_addr":"$upstream_addr","upstream_status":"$upstream_status","method":"$request_method","uri":"$request_uri","host":"$host","user_agent":"$http_user_agent","x_forwarded_for":"$http_x_forwarded_for"}';

    access_log /var/log/nginx/access.log json;
    error_log  /var/log/nginx/error.log warn;

    sendfile on;
    tcp_nopush on;
    tcp_nodelay on;
    keepalive_timeout 65;
    keepalive_requests 1000;
    types_hash_max_size 2048;

    client_max_body_size 10m;
    client_body_timeout 60s;
    client_header_timeout 60s;

    gzip on;
    gzip_comp_level 6;
    gzip_min_length 1024;
    gzip_vary on;
    gzip_proxied any;
    gzip_types
        application/json
        application/javascript
        text/css
        text/plain
        application/xml
        application/x-javascript
        text/javascript
        text/xml;

    # Rate limiting (HTTP 429 on throttle)
    limit_conn_zone $binary_remote_addr zone=addr_limit:10m;
    limit_req_zone  $binary_remote_addr zone=api_limit:10m rate=10r/s;
    limit_req_zone  $binary_remote_addr zone=general_limit:10m rate=20r/s;
    limit_req_status 429;
    limit_conn_status 429;

    map $http_upgrade $connection_upgrade {
        default upgrade;
        ''      close;
    }

    # Docker embedded DNS resolver for runtime DNS (required for Option A)
    resolver 127.0.0.11 valid=10s;
    resolver_timeout 5s;

    # CORS allowlist
    map $http_origin $cors_ok {
        default 0;
        "https://metro-system.vercel.app" 1;
        "https://metrohcm.io.vn"          1;
        "https://api.metrohcm.io.vn"      1;
    }
    map $cors_ok $cors_origin {
        0 "";
        1 $http_origin;
    }

    # HSTS per-host (disable on localhost)
    map $host $hsts_header {
        default "max-age=31536000; includeSubDomains";
        localhost "";
    }

    ########################################################################
    # Default vhosts (catch raw IP / unknown host) — drop connection
    ########################################################################
    server {
        listen 80      default_server;
        listen [::]:80 default_server;
        server_name _;
        return 444;
    }
    server {
        listen 443 ssl      default_server;
        listen [::]:443 ssl default_server;
        server_name _;

        # Reuse main cert to terminate and drop
        ssl_certificate     /etc/letsencrypt/live/metrohcm.io.vn/fullchain.pem;
        ssl_certificate_key /etc/letsencrypt/live/metrohcm.io.vn/privkey.pem;
        return 444;
    }

    ########################################################################
    # HTTP -> HTTPS redirect + minimal endpoints
    ########################################################################
    server {
        listen 80;
        listen [::]:80;
        server_name metrohcm.io.vn *.metrohcm.io.vn localhost;

        # Block dotfiles / common secret files
        location ~ /\.(?!well-known)(.*)$ { deny all; }
        location ~* \.(env|ini|log|bak|sql|swp|DS_Store)$ { deny all; }

        add_header X-Frame-Options DENY always;
        add_header X-Content-Type-Options nosniff always;

        # Health (http) — useful for external LB probes
        location /health {
            # runtime DNS via variable (direct to container name)
            set $api_health http://api-gateway:8000/health;
            proxy_pass         $api_health;
            proxy_set_header   Host $host;
            proxy_set_header   X-Real-IP $remote_addr;
            proxy_set_header   X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header   X-Forwarded-Proto $scheme;
            proxy_set_header   Connection "";
        }

        # Minimal endpoints on 80; everything else redirects to HTTPS
        location /favicon.ico {
            access_log off;
            log_not_found off;
            return 204;
        }

        location /api-docs/ {
            set $api_backend http://api-gateway:8000;
            proxy_pass $api_backend;

            proxy_set_header   Host $host;
            proxy_set_header   X-Real-IP $remote_addr;
            proxy_set_header   X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header   X-Forwarded-Proto $scheme;
            
            proxy_set_header   X-Forwarded-Prefix /api-docs;

            proxy_connect_timeout 10s;
            proxy_send_timeout 10s;
            proxy_read_timeout 10s;

            proxy_redirect off;  
        }

        location /webhook/ {
            # runtime DNS via variable (prevents stale IP)
            set $webhook_backend http://webhook:3003;
            proxy_pass $webhook_backend;

            proxy_set_header   Host $host;
            proxy_set_header   X-Real-IP $remote_addr;
            proxy_set_header   X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header   X-Forwarded-Proto $scheme;
            proxy_set_header   X-Forwarded-Host $host;
            proxy_set_header   X-Forwarded-Port $server_port;

            proxy_connect_timeout 30s;
            proxy_send_timeout    30s;
            proxy_read_timeout    30s;
            client_max_body_size  10m;
        }

        location / { return 301 https://$host$request_uri; }
    }

    ########################################################################
    # HTTPS Server
    ########################################################################
    server {
        listen 443 ssl;
        listen [::]:443 ssl;
        http2 on;
        server_name metrohcm.io.vn *.metrohcm.io.vn localhost;

        # TLS
        ssl_certificate     /etc/letsencrypt/live/metrohcm.io.vn/fullchain.pem;
        ssl_certificate_key /etc/letsencrypt/live/metrohcm.io.vn/privkey.pem;
        ssl_protocols TLSv1.2 TLSv1.3;
        ssl_ciphers ECDHE-ECDSA-AES256-GCM-SHA384:ECDHE-RSA-AES256-GCM-SHA384:ECDHE-ECDSA-CHACHA20-POLY1305:ECDHE-RSA-CHACHA20-POLY1305:ECDHE-ECDSA-AES128-GCM-SHA256:ECDHE-RSA-AES128-GCM-SHA256;
        ssl_prefer_server_ciphers off;

        ssl_session_cache shared:SSL:50m;
        ssl_session_timeout 1d;
        ssl_session_tickets off;

        # OCSP & curves
        ssl_stapling on;
        ssl_stapling_verify on;
        ssl_trusted_certificate /etc/letsencrypt/live/metrohcm.io.vn/fullchain.pem;
        ssl_ecdh_curve X25519:P-256;

        # Security headers
        add_header X-Frame-Options DENY always;
        add_header X-Content-Type-Options nosniff always;
        add_header X-XSS-Protection "1; mode=block" always;
        add_header Referrer-Policy strict-origin-when-cross-origin always;
        add_header Permissions-Policy "geolocation=(), microphone=(), camera=()" always;
        add_header Strict-Transport-Security "$hsts_header" always;

        # Block dotfiles / common secret files
        location ~ /\.(?!well-known)(.*)$ { deny all; }
        location ~* \.(env|ini|log|bak|sql|swp|DS_Store)$ { deny all; }

        ####################################################################
        # Health check route (HTTPS)
        ####################################################################
        location /health {
            error_page 502 503 504 = @api_gateway_unavailable;
            proxy_intercept_errors on;

            set $api_health http://api-gateway:8000/health;
            proxy_pass $api_health;

            proxy_set_header   Host $host;
            proxy_set_header   X-Real-IP $remote_addr;
            proxy_set_header   X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header   X-Forwarded-Proto $scheme;
            proxy_set_header   Connection "";

            proxy_connect_timeout 5s;
            proxy_send_timeout 5s;
            proxy_read_timeout 5s;
        }


        ####################################################################
        # Favicon handling
        ####################################################################
        location /favicon.ico {
            access_log off;
            log_not_found off;
            expires 1y;
            add_header Cache-Control "public, immutable";
            return 204;
        }

        ####################################################################
        # Swagger UI Documentation
        ####################################################################
        location /api-docs/ {
            set $api_backend http://api-gateway:8000;
            proxy_pass $api_backend;

            proxy_hide_header Access-Control-Allow-Origin;
            proxy_hide_header Access-Control-Allow-Credentials;
            proxy_hide_header Access-Control-Allow-Methods;
            proxy_hide_header Access-Control-Allow-Headers;
            proxy_hide_header Access-Control-Expose-Headers;
            proxy_hide_header Access-Control-Max-Age;

            add_header Access-Control-Allow-Origin $cors_origin always;
            add_header Vary "Origin" always;
            add_header Access-Control-Allow-Methods "GET, POST, PUT, DELETE, PATCH, OPTIONS" always;
            add_header Access-Control-Allow-Headers "Authorization, Content-Type, X-Requested-With, x-api-key, X-Service-Auth" always;
            add_header Access-Control-Allow-Credentials true always;
            add_header Access-Control-Expose-Headers "Content-Length, Content-Range, Authorization" always;
            add_header Access-Control-Max-Age 86400 always;

            if ($request_method = 'OPTIONS') { return 204; }

            proxy_intercept_errors on;
            proxy_connect_timeout 10s;
            proxy_send_timeout 10s;
            proxy_read_timeout 10s;

            proxy_redirect off;
        }


        ####################################################################
        # Webhook routes (PayPal/Stripe/etc.)
        ####################################################################
        location /webhook/ {
            # Do not intercept errors — pass upstream status through
            proxy_intercept_errors off;

            # Clean upstream CORS; allow all for providers
            proxy_hide_header Access-Control-Allow-Origin;
            proxy_hide_header Access-Control-Allow-Credentials;
            proxy_hide_header Access-Control-Allow-Methods;
            proxy_hide_header Access-Control-Allow-Headers;
            proxy_hide_header Access-Control-Expose-Headers;
            proxy_hide_header Access-Control-Max-Age;

            add_header Access-Control-Allow-Origin "*" always;
            add_header Access-Control-Allow-Methods "GET, POST, PUT, DELETE, PATCH, OPTIONS" always;
            add_header Access-Control-Allow-Headers "Authorization, Content-Type, X-Requested-With, x-api-key, X-Service-Auth, X-PayPal-Signature, Stripe-Signature" always;
            add_header Access-Control-Allow-Credentials false always;
            add_header Access-Control-Expose-Headers "Content-Length, Content-Range, Authorization" always;
            add_header Access-Control-Max-Age 86400 always;
            add_header Vary "Origin" always;

            if ($request_method = 'OPTIONS') { return 204; }

            # Higher limits for bursts
            limit_req  zone=general_limit burst=50 nodelay;
            limit_conn addr_limit 30;

            # runtime DNS via variable (prevents stale IP)
            set $webhook_backend http://webhook:3003;
            proxy_pass $webhook_backend;

            proxy_http_version   1.1;
            proxy_set_header     Upgrade $http_upgrade;
            proxy_set_header     Connection $connection_upgrade;
            proxy_set_header     Host $host;
            proxy_set_header     X-Real-IP $remote_addr;
            proxy_set_header     X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header     X-Forwarded-Proto $scheme;
            proxy_set_header     X-Forwarded-Host $host;
            proxy_set_header     X-Forwarded-Port $server_port;
            proxy_cache_bypass   $http_upgrade;

            proxy_buffering on;
            proxy_buffers 8 16k;
            proxy_buffer_size 16k;
            proxy_busy_buffers_size 24k;
            proxy_max_temp_file_size 0;

            # Pass through upstream status and headers
            proxy_pass_header Server;
            proxy_pass_header Date;

            proxy_connect_timeout 30s;
            proxy_send_timeout    30s;
            proxy_read_timeout    30s;

            client_max_body_size 10m;
        }

        ####################################################################
        # API routes (/v1)
        ####################################################################
        location /v1/ {
            # Forward all errors unchanged
            proxy_intercept_errors off;

            # Clean upstream CORS and set controlled CORS
            proxy_hide_header Access-Control-Allow-Origin;
            proxy_hide_header Access-Control-Allow-Credentials;
            proxy_hide_header Access-Control-Allow-Methods;
            proxy_hide_header Access-Control-Allow-Headers;
            proxy_hide_header Access-Control-Expose-Headers;
            proxy_hide_header Access-Control-Max-Age;

            add_header Access-Control-Allow-Origin $cors_origin always;
            add_header Vary "Origin" always;
            add_header Access-Control-Allow-Methods "GET, POST, PUT, DELETE, PATCH, OPTIONS" always;
            add_header Access-Control-Allow-Headers "Authorization, Content-Type, X-Requested-With, x-api-key, X-Service-Auth" always;
            add_header Access-Control-Allow-Credentials true always;
            add_header Access-Control-Expose-Headers "Content-Length, Content-Range, Authorization" always;
            add_header Access-Control-Max-Age 86400 always;

            if ($request_method = 'OPTIONS') { return 204; }

            limit_req  zone=api_limit burst=20 nodelay;
            limit_conn addr_limit 20;

            # runtime DNS via variable (prevents stale IP)
            set $api_backend http://api-gateway:8000;
            proxy_pass           $api_backend;

            proxy_http_version   1.1;
            proxy_set_header     Upgrade $http_upgrade;
            proxy_set_header     Connection $connection_upgrade;
            proxy_set_header     Host $host;
            proxy_set_header     X-Real-IP $remote_addr;
            proxy_set_header     X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header     X-Forwarded-Proto $scheme;
            proxy_set_header     X-Forwarded-Host $host;
            proxy_set_header     X-Forwarded-Port $server_port;
            proxy_cache_bypass   $http_upgrade;

            # Buffering tuned for JSON APIs
            proxy_buffering on;
            proxy_buffers 16 16k;
            proxy_buffer_size 16k;
            proxy_busy_buffers_size 64k;
            proxy_max_temp_file_size 0;

            # Pass through a couple of headers
            proxy_pass_header Server;
            proxy_pass_header Date;

            proxy_connect_timeout 30s;
            proxy_send_timeout    30s;
            proxy_read_timeout    30s;
        }

        ####################################################################
        # Admin Tools - Database Management Interfaces
        ####################################################################
        
        # pgAdmin - PostgreSQL Database Management
        location /pgadmin/ {
            proxy_pass         http://pgadmin:80/;

            proxy_http_version 1.1;
            proxy_set_header   Upgrade $http_upgrade;
            proxy_set_header   Connection "upgrade";

            proxy_set_header   Host $host;
            proxy_set_header   X-Real-IP $remote_addr;
            proxy_set_header   X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header   X-Forwarded-Proto $scheme;

            proxy_set_header   X-Script-Name /pgadmin;

            proxy_connect_timeout 30s;
            proxy_send_timeout    3600s;
            proxy_read_timeout    3600s;

            client_max_body_size 20m;

            proxy_buffering off;

            error_page 502 503 504 = @admin_unavailable;
            proxy_intercept_errors on;
        }

        # Redis Commander - Redis Database Management  
        location /redis-commander/ {
            error_page 502 503 504 = @admin_unavailable;
            proxy_intercept_errors on;

            set $redis_commander_backend http://redis-commander:8082;
            proxy_pass $redis_commander_backend;

            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            proxy_set_header X-Forwarded-Prefix /redis-commander;
            
            proxy_connect_timeout 30s;
            proxy_send_timeout 30s;
            proxy_read_timeout 30s;
        }

        # Mongo Express - MongoDB Database Management
        location /mongo-express/ {
            error_page 502 503 504 = @admin_unavailable;  
            proxy_intercept_errors on;

            set $mongo_express_backend http://mongo-express:8081;
            proxy_pass $mongo_express_backend/;

            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            proxy_set_header X-Script-Name /mongo-express;
            
            proxy_connect_timeout 30s;
            proxy_send_timeout 30s;
            proxy_read_timeout 30s;
            
            client_max_body_size 10m;
        }

        # Grafana - Monitoring Dashboard
        location /grafana/ {
            error_page 502 503 504 = @admin_unavailable;
            proxy_intercept_errors on;

            set $grafana_backend http://grafana:3000;
            proxy_pass $grafana_backend;

            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            proxy_set_header X-Forwarded-Host $host;
            
            proxy_connect_timeout 30s;
            proxy_send_timeout 60s;
            proxy_read_timeout 60s;
        }

        # Error page for unavailable admin tools
        location @admin_unavailable {
            add_header Content-Type text/html;
            return 503 '<!DOCTYPE html>
        <html>
        <head><title>Admin Tool Unavailable</title></head>
        <body style="font-family: Arial, sans-serif; text-align: center; margin-top: 100px;">
            <h1>🔧 Admin Tool Not Available</h1>
            <p>This admin tool is not currently running.</p>
            <p>To enable admin tools, restart with: <code>docker-compose --profile admin-tools up -d</code></p>
            <p><a href="/grafana/">← Back to Grafana</a></p>
        </body>
        </html>';
        }

        # Error page for API Gateway unavailability
        location @api_gateway_unavailable {
            return 503 '<!DOCTYPE html>
        <html>
        <head><title>Service Temporarily Unavailable</title></head>
        <body style="font-family: Arial, sans-serif; text-align: center; margin-top: 100px;">
            <h1>🚧 Service Temporarily Unavailable</h1>
            <p>The Metro API Gateway is currently starting up or temporarily unavailable.</p>
            <p>Please try again in a few moments.</p>
            <p>If this issue persists, please contact the system administrator.</p>
            <p><a href="/health">← Check System Health</a></p>
        </body>
        </html>';
        }
    }
}
