syntax = "proto3";

package control;

service ControlService {
  rpc GenerateSchedule(GenerateScheduleRequest) returns (GenerateScheduleResponse);
  rpc Reschedule(RescheduleRequest) returns (RescheduleResponse);
  rpc GetPlan(GetPlanRequest) returns (GetPlanResponse);
  rpc GenerateDailySchedules(GenerateDailyRequest) returns (GenerateScheduleResponse);
}

message GenerateScheduleRequest {
  string routeId = 1;
  string date = 2; // YYYY-MM-DD
  string dayOfWeek = 3; // Monday..Sunday
  string serviceStart = 4; // HH:MM:SS
  string serviceEnd = 5;   // HH:MM:SS
  string direction = 6;    // origin_to_destination or destination_to_origin
}

message TripPlan {
  string routeId = 1;
  string provisionalTrainId = 2; // optional placeholder before commit
  string departureTime = 3;
  string arrivalTime = 4;
  string dayOfWeek = 5;
}

message GenerateScheduleResponse {
  int32 trips = 1;
}

message RescheduleRequest {
  string fromTime = 1; // HH:MM:SS
  int32 horizonMin = 2;
  repeated string affectedRoutes = 3;
  repeated string reasons = 4;
}

message RescheduleResponse {
  int32 tripsAdjusted = 1;
}

message GetPlanRequest {
  string routeId = 1;
  string date = 2;
}

message StopPlan {
  string stationId = 1;
  string arrivalTime = 2;
  string departureTime = 3;
  int32 sequence = 4;
}

message TripWithStopsPlan {
  TripPlan trip = 1;
  repeated StopPlan stops = 2;
}

message GetPlanResponse {
  repeated TripWithStopsPlan items = 1;
}

message GenerateDailyRequest {
  string date = 1;        // YYYY-MM-DD
  string dayOfWeek = 2;   // Monday..Sunday
  repeated string routeIds = 3; // optional; empty => all active routes
}


