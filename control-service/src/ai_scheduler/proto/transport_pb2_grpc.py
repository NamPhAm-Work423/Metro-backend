# Generated by the gRPC Python protocol compiler plugin. DO NOT EDIT!
"""Client and server classes corresponding to protobuf-defined services."""
import grpc
import warnings

from . import transport_pb2 as transport__pb2

GRPC_GENERATED_VERSION = '1.65.5'
GRPC_VERSION = grpc.__version__
EXPECTED_ERROR_RELEASE = '1.66.0'
SCHEDULED_RELEASE_DATE = 'August 6, 2024'
_version_not_supported = False

try:
    from grpc._utilities import first_version_is_lower
    _version_not_supported = first_version_is_lower(GRPC_VERSION, GRPC_GENERATED_VERSION)
except ImportError:
    _version_not_supported = True

if _version_not_supported:
    warnings.warn(
        f'The grpc package installed is at version {GRPC_VERSION},'
        + f' but the generated code in transport_pb2_grpc.py depends on'
        + f' grpcio>={GRPC_GENERATED_VERSION}.'
        + f' Please upgrade your grpc module to grpcio>={GRPC_GENERATED_VERSION}'
        + f' or downgrade your generated code using grpcio-tools<={GRPC_VERSION}.'
        + f' This warning will become an error in {EXPECTED_ERROR_RELEASE},'
        + f' scheduled for release on {SCHEDULED_RELEASE_DATE}.',
        RuntimeWarning
    )


class TransportServiceStub(object):
    """Missing associated documentation comment in .proto file."""

    def __init__(self, channel):
        """Constructor.

        Args:
            channel: A grpc.Channel.
        """
        self.GetRoute = channel.unary_unary(
                '/transport.TransportService/GetRoute',
                request_serializer=transport__pb2.GetRouteRequest.SerializeToString,
                response_deserializer=transport__pb2.RouteResponse.FromString,
                _registered_method=True)
        self.GetStation = channel.unary_unary(
                '/transport.TransportService/GetStation',
                request_serializer=transport__pb2.GetStationRequest.SerializeToString,
                response_deserializer=transport__pb2.StationResponse.FromString,
                _registered_method=True)
        self.GetTrip = channel.unary_unary(
                '/transport.TransportService/GetTrip',
                request_serializer=transport__pb2.GetTripRequest.SerializeToString,
                response_deserializer=transport__pb2.TripResponse.FromString,
                _registered_method=True)
        self.GetRoutesByStations = channel.unary_unary(
                '/transport.TransportService/GetRoutesByStations',
                request_serializer=transport__pb2.GetRoutesByStationsRequest.SerializeToString,
                response_deserializer=transport__pb2.RoutesResponse.FromString,
                _registered_method=True)
        self.GetRouteStations = channel.unary_unary(
                '/transport.TransportService/GetRouteStations',
                request_serializer=transport__pb2.GetRouteStationsRequest.SerializeToString,
                response_deserializer=transport__pb2.RouteStationsResponse.FromString,
                _registered_method=True)
        self.CalculateStationCount = channel.unary_unary(
                '/transport.TransportService/CalculateStationCount',
                request_serializer=transport__pb2.CalculateStationCountRequest.SerializeToString,
                response_deserializer=transport__pb2.StationCountResponse.FromString,
                _registered_method=True)
        self.ListRoutes = channel.unary_unary(
                '/transport.TransportService/ListRoutes',
                request_serializer=transport__pb2.ListRoutesRequest.SerializeToString,
                response_deserializer=transport__pb2.RoutesResponse.FromString,
                _registered_method=True)
        self.ListTrains = channel.unary_unary(
                '/transport.TransportService/ListTrains',
                request_serializer=transport__pb2.ListTrainsRequest.SerializeToString,
                response_deserializer=transport__pb2.TrainsResponse.FromString,
                _registered_method=True)
        self.BulkUpsertTrips = channel.unary_unary(
                '/transport.TransportService/BulkUpsertTrips',
                request_serializer=transport__pb2.BulkUpsertTripsRequest.SerializeToString,
                response_deserializer=transport__pb2.BulkUpsertTripsResponse.FromString,
                _registered_method=True)
        self.BulkUpsertStops = channel.unary_unary(
                '/transport.TransportService/BulkUpsertStops',
                request_serializer=transport__pb2.BulkUpsertStopsRequest.SerializeToString,
                response_deserializer=transport__pb2.BulkUpsertStopsResponse.FromString,
                _registered_method=True)


class TransportServiceServicer(object):
    """Missing associated documentation comment in .proto file."""

    def GetRoute(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GetStation(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GetTrip(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GetRoutesByStations(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GetRouteStations(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def CalculateStationCount(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def ListRoutes(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def ListTrains(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def BulkUpsertTrips(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def BulkUpsertStops(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')


def add_TransportServiceServicer_to_server(servicer, server):
    rpc_method_handlers = {
            'GetRoute': grpc.unary_unary_rpc_method_handler(
                    servicer.GetRoute,
                    request_deserializer=transport__pb2.GetRouteRequest.FromString,
                    response_serializer=transport__pb2.RouteResponse.SerializeToString,
            ),
            'GetStation': grpc.unary_unary_rpc_method_handler(
                    servicer.GetStation,
                    request_deserializer=transport__pb2.GetStationRequest.FromString,
                    response_serializer=transport__pb2.StationResponse.SerializeToString,
            ),
            'GetTrip': grpc.unary_unary_rpc_method_handler(
                    servicer.GetTrip,
                    request_deserializer=transport__pb2.GetTripRequest.FromString,
                    response_serializer=transport__pb2.TripResponse.SerializeToString,
            ),
            'GetRoutesByStations': grpc.unary_unary_rpc_method_handler(
                    servicer.GetRoutesByStations,
                    request_deserializer=transport__pb2.GetRoutesByStationsRequest.FromString,
                    response_serializer=transport__pb2.RoutesResponse.SerializeToString,
            ),
            'GetRouteStations': grpc.unary_unary_rpc_method_handler(
                    servicer.GetRouteStations,
                    request_deserializer=transport__pb2.GetRouteStationsRequest.FromString,
                    response_serializer=transport__pb2.RouteStationsResponse.SerializeToString,
            ),
            'CalculateStationCount': grpc.unary_unary_rpc_method_handler(
                    servicer.CalculateStationCount,
                    request_deserializer=transport__pb2.CalculateStationCountRequest.FromString,
                    response_serializer=transport__pb2.StationCountResponse.SerializeToString,
            ),
            'ListRoutes': grpc.unary_unary_rpc_method_handler(
                    servicer.ListRoutes,
                    request_deserializer=transport__pb2.ListRoutesRequest.FromString,
                    response_serializer=transport__pb2.RoutesResponse.SerializeToString,
            ),
            'ListTrains': grpc.unary_unary_rpc_method_handler(
                    servicer.ListTrains,
                    request_deserializer=transport__pb2.ListTrainsRequest.FromString,
                    response_serializer=transport__pb2.TrainsResponse.SerializeToString,
            ),
            'BulkUpsertTrips': grpc.unary_unary_rpc_method_handler(
                    servicer.BulkUpsertTrips,
                    request_deserializer=transport__pb2.BulkUpsertTripsRequest.FromString,
                    response_serializer=transport__pb2.BulkUpsertTripsResponse.SerializeToString,
            ),
            'BulkUpsertStops': grpc.unary_unary_rpc_method_handler(
                    servicer.BulkUpsertStops,
                    request_deserializer=transport__pb2.BulkUpsertStopsRequest.FromString,
                    response_serializer=transport__pb2.BulkUpsertStopsResponse.SerializeToString,
            ),
    }
    generic_handler = grpc.method_handlers_generic_handler(
            'transport.TransportService', rpc_method_handlers)
    server.add_generic_rpc_handlers((generic_handler,))
    server.add_registered_method_handlers('transport.TransportService', rpc_method_handlers)


 # This class is part of an EXPERIMENTAL API.
class TransportService(object):
    """Missing associated documentation comment in .proto file."""

    @staticmethod
    def GetRoute(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/transport.TransportService/GetRoute',
            transport__pb2.GetRouteRequest.SerializeToString,
            transport__pb2.RouteResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def GetStation(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/transport.TransportService/GetStation',
            transport__pb2.GetStationRequest.SerializeToString,
            transport__pb2.StationResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def GetTrip(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/transport.TransportService/GetTrip',
            transport__pb2.GetTripRequest.SerializeToString,
            transport__pb2.TripResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def GetRoutesByStations(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/transport.TransportService/GetRoutesByStations',
            transport__pb2.GetRoutesByStationsRequest.SerializeToString,
            transport__pb2.RoutesResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def GetRouteStations(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/transport.TransportService/GetRouteStations',
            transport__pb2.GetRouteStationsRequest.SerializeToString,
            transport__pb2.RouteStationsResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def CalculateStationCount(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/transport.TransportService/CalculateStationCount',
            transport__pb2.CalculateStationCountRequest.SerializeToString,
            transport__pb2.StationCountResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def ListRoutes(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/transport.TransportService/ListRoutes',
            transport__pb2.ListRoutesRequest.SerializeToString,
            transport__pb2.RoutesResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def ListTrains(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/transport.TransportService/ListTrains',
            transport__pb2.ListTrainsRequest.SerializeToString,
            transport__pb2.TrainsResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def BulkUpsertTrips(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/transport.TransportService/BulkUpsertTrips',
            transport__pb2.BulkUpsertTripsRequest.SerializeToString,
            transport__pb2.BulkUpsertTripsResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def BulkUpsertStops(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/transport.TransportService/BulkUpsertStops',
            transport__pb2.BulkUpsertStopsRequest.SerializeToString,
            transport__pb2.BulkUpsertStopsResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)
