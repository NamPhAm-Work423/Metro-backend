# OpenTelemetry Tracing Configuration
# Copy this to your service .env files and adjust SERVICE_NAME accordingly

# Service identification
SERVICE_NAME=metro-service-name  # Change this for each service (e.g., api-gateway, auth-service, etc.)
SERVICE_VERSION=1.0.0
ENVIRONMENT=development

# Jaeger configuration
JAEGER_ENDPOINT=http://jaeger:14268/api/traces  # For Node.js HTTP exporter
JAEGER_AGENT_HOST=jaeger                        # For Python agent
JAEGER_AGENT_PORT=6831                          # For Python agent

# OpenTelemetry settings
OTEL_SERVICE_NAME=${SERVICE_NAME}
OTEL_EXPORTER_JAEGER_ENDPOINT=${JAEGER_ENDPOINT}
OTEL_TRACES_EXPORTER=jaeger
OTEL_METRICS_EXPORTER=none
OTEL_LOGS_EXPORTER=none

# Sampling configuration (optional)
OTEL_TRACES_SAMPLER=traceidratio
OTEL_TRACES_SAMPLER_ARG=1.0  # 1.0 = 100% sampling (reduce in production)

# Resource attributes
OTEL_RESOURCE_ATTRIBUTES=service.name=${SERVICE_NAME},service.version=${SERVICE_VERSION},deployment.environment=${ENVIRONMENT}

# Service-specific names for different microservices:
# api-gateway
# auth-service  
# user-service
# transport-service
# ticket-service
# public-service
# payment-service
# report-service
# control-service
# notification-service
# scheduler-service
# management-service
# webhook
